---
preset: simple
releaseAssets:
  helm-plugin:
    fileName: "helm-plugin"
    description: "helm-publish-plugin {{version}}"
    type: "application/octet-stream"
    path: "helm-plugin/build/libs/"
  helm-publish-plugin:
    fileName: "helm-publish-plugin"
    description: "helm-publish-plugin {{version}}"
    type: "application/octet-stream"
    path: "helm-publish-plugin/build/libs/"
  helm-releases-plugin:
    fileName: "helm-releases-plugin"
    description: "helm-releases-plugin {{version}}"
    type: "application/octet-stream"
    path: "helm-releases-plugin/build/libs/"
commitMessageConventions:
  enabled:
    - conventionalCommits
  items:
    conventionalCommits:
      expression: "(?m)^(?<type>[a-zA-Z0-9_]+)(!)?(\\((?<scope>[a-z ]+)\\))?:( (?<title>.+))$(?s).*"
      bumpExpressions:
        major: "(?s)(?m)^[a-zA-Z0-9_]+(!|.*^(BREAKING( |-)CHANGE: )).*"
        minor: "(?s)(?m)^feat(?!!|.*^(BREAKING( |-)CHANGE: )).*"
        patch: "(?s)(?m)^fix(?!!|.*^(BREAKING( |-)CHANGE: )).*"
changelog:
  path: "build/CHANGELOG.md"
  template: ".github/CHANGELOG.tpl"
  sections:
    "Added": "^feat$"
    "Fixed": "^fix$"
  substitutions:
    "(?m)#([0-9]+)(?s)": "[#%s](https://github.com/bullshit/gradle-helmng-plugin/issues/%s)"
releaseTypes:
  enabled:
    - mainline
    - maturity
    - integration
    - hotfix
    - feature
    - release
    - maintenance
    - internal
  publicationServices:
    - github
  items:
    mainline:
      collapseVersions: false
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)$"
      gitCommit: "false"
      gitCommitMessage: "Release version {{version}}"
      gitPush: "true"
      gitTag: "true"
      gitTagMessage: "Tag version {{version}}"
      matchBranches: ^(master|main)$
      matchEnvironmentVariables:
        CI: "^true$"
      matchWorkspaceStatus: "CLEAN"
      publish: "true"
      versionRangeFromBranchName: false
    maturity:
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      description: "Maturity release {{version}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)(\\.([0-9]\\d*))?)?$"
      gitCommit: "false"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)$"
      matchWorkspaceStatus: "CLEAN"
      publish: "true"
      versionRangeFromBranchName: false
    integration:
      assets:
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      description: "Integration release {{version}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(develop|development|integration|latest)(\\.([0-9]\\d*))?)$"
      gitCommit: "false"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(develop|development|integration|latest)$"
      matchWorkspaceStatus: "CLEAN"
      publish: "true"
      versionRangeFromBranchName: false
    hotfix:
      assets:
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      description: "Hotfix release {{version}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(fix|hotfix)(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitCommit: "false"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(fix|hotfix)((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchWorkspaceStatus: "CLEAN"
      publish: "true"
      versionRangeFromBranchName: false
    feature:
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      description: "Feature release {{version}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(feat|feature)(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitCommit: "false"
      gitPush: "false"
      gitTag: "false"
      matchBranches: "^(feat|feature)((-|\\/)[0-9a-zA-Z-_]+)?$"
      publish: "false"
      versionRangeFromBranchName: false
    release:
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      description: "Release {{version}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(rel|release)((\\.([0-9]\\d*))?)?)$"
      gitCommit: "false"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(rel|release)(-|\\/)({{configuration.releasePrefix}})?([0-9|x]\\d*)(\\.([0-9|x]\\d*)(\\.([0-9|x]\\d*))?)?$"
      matchWorkspaceStatus: "CLEAN"
      publish: "false"
      versionRangeFromBranchName: true
    maintenance:
      collapseVersions: false
      description: "Maintenance release {{version}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)$"
      gitCommit: "false"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^[a-zA-Z]*([0-9|x]\\d*)(\\.([0-9|x]\\d*)(\\.([0-9|x]\\d*))?)?$"
      matchWorkspaceStatus: "CLEAN"
      publish: "true"
      versionRangeFromBranchName: true
    internal:
      collapseVersions: true
      collapsedVersionQualifier: "internal"
      description: "Internal release {{version}}"
      gitCommit: "false"
      gitPush: "false"
      gitTag: "false"
      identifiers:
        - position: BUILD
          qualifier: branch
          value: "{{#sanitize}}{{branch}}{{/sanitize}}"
        - position: BUILD
          qualifier: commit
          value: "{{#short7}}{{releaseScope.finalCommit}}{{/short7}}"
        - position: BUILD
          qualifier: timestamp
          value: "{{#timestampYYYYMMDDHHMMSS}}{{timestamp}}{{/timestampYYYYMMDDHHMMSS}}"
        - position: BUILD
          qualifier: user
          value: "{{#sanitizeLower}}{{environmentUser}}{{/sanitizeLower}}"
      publish: "false"
      versionRangeFromBranchName: false
scheme: "SEMVER"
releaseLenient: true
releasePrefix: ""
services:
  github:
    type: "GITHUB"
    options:
      # The GH_TOKEN variable is fetched from the "secrets" context and passed as an environment variable.
      # See:
      # - https://docs.github.com/en/actions/security-guides/automatic-token-authentication
      # - https://docs.github.com/en/actions/learn-github-actions/contexts#github-context
      AUTHENTICATION_TOKEN: "{{#environmentVariable}}GH_TOKEN{{/environmentVariable}}"
      REPOSITORY_NAME: "gradle-helmng-plugin"
      REPOSITORY_OWNER: "bullshit"
resume: true
stateFile: "build/.nyx-state.yml"
verbosity: DEBUG
